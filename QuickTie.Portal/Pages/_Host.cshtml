@page "/"
@using Microsoft.AspNetCore.Components.Web
@namespace QuickTie.Portal.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link rel="stylesheet" href="_content/DevExpress.Blazor.Themes/blazing-berry.bs5.min.css" asp-append-version="true" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link rel="stylesheet" href="_content/DevExpress.Blazor.Themes/bootstrap-external.bs5.min.css" />
    <link href="https://cdn3.devexpress.com/jslib/22.2.6/css/dx.common.css" rel="stylesheet">
    <link href="https://cdn3.devexpress.com/jslib/22.2.6/css/dx.light.css" rel="stylesheet">
    <link href="css/site.css" rel="stylesheet" />
    <link href="QuickTie.Portal.styles.css" rel="stylesheet" />
    <link rel="icon" type="image/png" href="favicon.png" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn3.devexpress.com/jslib/22.2.6/js/dx.all.js"></script>
    <script src="https://kit.fontawesome.com/e8f7b56eed.js" crossorigin="anonymous"></script>
    <script src="https://unpkg.com/imask"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"></script>
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    <component type="typeof(App)" render-mode="ServerPrerendered" />

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>

    <script>
        let filterInstance = null;
        let drawerContentInstance = null;

        window.initFilterReference = function (instance) {
            filterInstance = instance;
        }
        window.initDrawerContentReference = function (instance) {
            drawerContentInstance = instance;
        }

        window.initializeRangeSlider = function (elementId, min, max, start, end, step, isToolTipEnabled) {
            $("#" + elementId).dxRangeSlider({
                min: min,
                max: max,
                start: start,
                end: end,
                step: step,
                tooltip: {
                    enabled: isToolTipEnabled
                },
                valueChangeMode: 'onHandleRelease',
                onValueChanged: function (info) {
                    filterInstance.invokeMethodAsync("UpdateSpinEditValue", info.start, info.end);
                }
            });
        };

        window.initializeDrawer = function (elementId) {
            $('#' + elementId).dxDrawer({
                opened: false,
                position: 'right',
                shading : true,
                revealMode: 'slide',
                openedStateMode: 'shrink',
                closeOnOutsideClick: true,
                template: function (e) {
                    var drawerContentElement = $('#drawer-content').removeClass("d-none");
                    $("#" + elementId).append(drawerContentElement);

                    return drawerContentElement;
                },
                onOptionChanged: function (e) {
                    let duration = e.value === true ? 0 : 400;
                    setTimeout(()=>{
                        $('#' + elementId).toggleClass("invisible");
                    }, duration);
                }
            })
        }

        window.toggleDrawer = function (elementId) {
            var drawerInstance = $('#' + elementId).dxDrawer('instance');
            drawerInstance.toggle();
            drawerContentInstance.invokeMethodAsync("HandleLoadCart");
        }

        window.addIMask = function (elementId, mask) {
            var element = document.getElementById(elementId);
            var maskObject = IMask(element, {
                mask: mask
            });
        }
    </script>
</body>
</html>
